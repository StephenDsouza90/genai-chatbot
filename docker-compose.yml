services:
  redis:
    image: redis:8.0-rc1-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    command: >
      sh -c 'mkdir -p /usr/local/etc/redis
      && echo "user $${REDIS_USERNAME} on >$${REDIS_PASSWORD} ~* +@all" > /usr/local/etc/redis/users.acl
      && cat /usr/local/etc/redis/users.acl
      && redis-server --aclfile /usr/local/etc/redis/users.acl'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d chatbot_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/chatbot_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src

volumes:
  postgres_data:
  redis_data:
